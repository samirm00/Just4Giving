{"version":3,"sources":["assets/landingpage/logo22.png","components/landingpage/Navigation.jsx","assets/landingpage/team.png","assets/landingpage/trust.png","assets/landingpage/team1.png","assets/landingpage/video.mp4","assets/landingpage/illustartion.png","components/landingpage/Demo.jsx","components/disclaimer/Disclaimer.jsx","components/landingpage/Footer.jsx","components/landingpage/About.jsx","redux/actions/userInfoAction.js","components/register/SignUpNeeder.jsx","components/register/signUpGiver.jsx","assets/login/signin.png","components/login/Login.jsx","redux/actions/goodsInfoAction.js","components/giver/Goods.jsx","components/giver/Giverprofile.jsx","components/giver/NewItem.jsx","components/giver/ItemPreview.jsx","components/giver/ItemView.jsx","App.jsx","serviceWorker.js","redux/reducers/userInfoReducer.js","redux/reducers/goodsInfoReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Navigation","signIn","useSelector","state","userInfo","signedIn","className","Navbar","collapseOnSelect","expand","sticky","Brand","href","src","logo","width","height","alt","Toggle","aria-controls","Collapse","id","Nav","Item","Link","Demo","Jumbotron","to","Button","CardDeck","Card","Body","Title","Text","Img","style","team","trust","team1","controls","url","video","footer","Disclaimer","props","Modal","aria-labelledby","size","Header","closeButton","Container","Row","Col","lg","Footer","useState","modalShow","setModalShow","onClick","show","onHide","paddingRight","aria-hidden","About","signedUserInfo","user","type","payload","SignUpNeeder","validated","setValidated","first_name","setFirst_name","last_name","setLast_name","age","setAge","phone","setPhone","street","setStreet","email","setEmail","description","setDescription","password","setPassword","confirmpassword","setConfirmpassword","dispatch","useDispatch","usertype","is_needer","handleSubmit","event","a","form","currentTarget","preventDefault","stopPropagation","checkValidity","alert","userdata","is_giver","agreement","axios","post","then","res","console","log","error","pathname","Form","noValidate","onSubmit","Group","as","md","controlId","Label","Control","required","name","minLength","maxLength","onChange","e","target","value","Feedback","min","max","placeholder","rows","Check","label","feedback","SignUpGiver","data","Login","isGiver","isNeeder","pic","createGoods","goods","Goods","setGoods","history","useHistory","user_id","FetchGoods","get","response","useEffect","display","flexWrap","justifyContent","Object","values","map","good","index","flexGrow","moment","utc","createdAt","local","startOf","fromNow","item_name","category","push","variant","goods_id","Giver","NewItem","item","setItem","setCategory","quality","setQuality","quantity","setQuantity","image","setImage","setForm","uploadImage","file","files","convertBase64","base64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","newGood","File","aria-describedby","htmlFor","custom","ItemPreview","giver_id","location","newItem","available","taken","owner_id","category_id","updatedAt","handleNewItem","ItemView","itemIndex","useParams","goods_copy","cloneDeep","currentGood","currentGoodId","deleteItem","delete","App","path","exact","component","Boolean","window","hostname","match","initialState","signedOut","signedInError","allReducers","combineReducers","action","assign","composedEnhancer","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1275fc2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo22.484dbe2e.png\";","import React, {useState} from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport logo from \"../../assets/landingpage/logo22.png\";\nimport {useSelector} from \"react-redux\";\n\n\n\nfunction Navigation() {\n    // check if the user is sign in\n    const signIn = useSelector(state => state.userInfo.signedIn) ;\n\n    const authenticatedNavBar = () => {\n        return (\n\n            <div className=\"margin-t-b\">\n                <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\">\n                    <Navbar>\n                        <Navbar.Brand className=\"main-brand\" href=\"/\">\n                            <img\n                                src={logo}\n                                width=\"60\"\n                                height=\"60\"\n                                className=\"d-inline-block align-top\"\n                                alt=\"just4giving logo\"\n                            />\n                            JUST4GIVING\n                        </Navbar.Brand>\n                    </Navbar>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"row justify-content-end links\">\n                            <Nav.Item>\n                                <Nav.Link href=\"/aboutus\">About Us</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"/login\">Sign Out</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )};\n    const unauthenticatedNavBar = () => {\n        return (\n            <div className=\"margin-t-b\">\n                <Navbar collapseOnSelect expand=\"lg\" sticky=\"top\">\n                    <Navbar>\n                        <Navbar.Brand className=\"main-brand\" href=\"/\">\n                            <img\n                                src={logo}\n                                width=\"60\"\n                                height=\"60\"\n                                className=\"d-inline-block align-top\"\n                                alt=\"just4giving logo\"\n                            />\n                            JUST4GIVING\n                        </Navbar.Brand>\n                    </Navbar>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"row justify-content-end links\">\n                            <Nav.Item>\n                                <Nav.Link href=\"/aboutus\">About Us</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link href=\"/login\">Sign In</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )};\n\n    return (\n        <div  >\n             {/*<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />*/}\n            <>\n            { signIn ?   authenticatedNavBar() : unauthenticatedNavBar()}\n            </>\n        </div>\n    )\n}\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/team.ff6f61b6.png\";","export default __webpack_public_path__ + \"static/media/trust.64576dfa.png\";","export default __webpack_public_path__ + \"static/media/team1.04ca9913.png\";","export default __webpack_public_path__ + \"static/media/video.75d78b03.mp4\";","export default __webpack_public_path__ + \"static/media/illustartion.6c2bd8dc.png\";","import React from \"react\";\nimport { Jumbotron, Button, Card, CardDeck } from \"react-bootstrap\";\nimport team from \"../../assets/landingpage/team.png\";\nimport trust from \"../../assets/landingpage/trust.png\";\nimport team1 from \"../../assets/landingpage/team1.png\";\nimport ReactPlayer from \"react-player\";\nimport video from \"../../assets/landingpage/video.mp4\";\nimport footer from \"../../assets/landingpage/illustartion.png\";\nimport { Link } from \"react-router-dom\";\nfunction Demo() {\n  return (\n    <div className=\"Demo\">\n      <div className=\"bg\">\n        <Jumbotron>\n          <h1>Welcome To JUST4GIVING!</h1>\n          <p>\n          <Link to={\"/signupneeder\"}>\n            <Button className=\"btn-sm\">I Need Something</Button>\n          </Link>\n          <Link to={\"/signupgiver\"}>\n            <Button className=\"btn-sm\">I Want to donate Something</Button>\n          </Link>\n          </p>\n        </Jumbotron>\n\n        <CardDeck className=\"cards\">\n          <Card className=\"shadow-lg rounded card1\">\n            <Card.Body>\n              <Card.Title id=\"card1h\">Donate</Card.Title>\n              <Card.Text id=\"card1p\">\n                Don't throw it away, give it away. Help others to have a better\n                life.\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={team}\n              />\n            </Card.Body>\n          </Card>\n          <Card className=\"shadow-lg rounded card2\">\n            <Card.Body>\n              <Card.Title id=\"card2h\">Help</Card.Title>\n              <Card.Text id=\"card2p\">\n                We know you are strong but accepting help is its own kind of\n                strength.\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={trust}\n              />\n            </Card.Body>\n          </Card>\n          <Card className=\"shadow-lg rounded card3\">\n            <Card.Body>\n              <Card.Title id=\"card3h\">Connected</Card.Title>\n              <Card.Text id=\"card3p\">\n                Stay connected. The world is full with nice people. If you can't\n                find one Be One!\n              </Card.Text>\n              <Card.Img\n                style={{ width: \"120px\", height: \"120px\" }}\n                src={team1}\n              />\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        <div className=\"container\">\n          <div className=\"player-wrapper\">\n            <h2 id=\"videoh\">Our Vision</h2>\n            <ReactPlayer\n              className=\"react-player\"\n              width=\"80%\"\n              height=\"650px\"\n              controls={true}\n              url={video}\n            />\n          </div>\n        </div>\n\n        <div>\n          <img className=\"bg2\" src={footer} alt=\"bg2\" />\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Demo;\n","import React from 'react';\nimport { Modal, Container, Row, Col } from 'react-bootstrap';\nimport '../../App.css';\nfunction Disclaimer(props) {\n  return (\n    <Modal\n      {...props}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      size=\"xl\"\n      className=\"bg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title\n          id=\"contained-modal-title-vcenter\"\n          className=\"p-2 modal-title text-white w-100 text-center\"\n        >\n          Privacy Policy | Disclaimer\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"show-grid\">\n        <Container>\n          {/* terms of use */}\n          <Row>\n            <Col lg=\"4\"></Col>\n            <Col>\n              <div className=\"disclaimer-card p-5 m-4\" id=\"terms\">\n                <h4 className=\"text-center text-white disclaimer-title\">\n                  Terms of Use\n                </h4>\n                <div className=\"disclaimer-text text-white mt-4\">\n                  Terms of use: By using the app, you consent to the terms of\n                  use, if you do not consent; do not use App site. The services\n                  provided through our JUST4GIVING App require you to open an\n                  account (sign up). You are responsible (liable) for\n                  maintaining the confidentiality of the information you hold\n                  for your account, including your password and activity that\n                  occurs under your account; so keep your information\n                  confidential. You may be held liable for misuse or abuse for\n                  any other user of our App due to someone else using your\n                  email, password or account as a result of your fault to keep\n                  your account information confidential. Any feedback (comment)\n                  you provided on our site shall be regarded as\n                  non-confidential, will be free to use such information\n                  uninhibitedly.\n                </div>\n              </div>\n            </Col>\n          </Row>\n          {/* privacy */}\n          <Row>\n            <Col>\n              <div className=\"disclaimer-card p-5 m-4\" id=\"privacy\">\n                <h4 className=\"text-center text-white disclaimer-title\">\n                  Privacy\n                </h4>\n                <div className=\"disclaimer-text text-white mt-4\">\n                  <ul>\n                    <li>\n                      We won’t pass on your phone number to any organisation\n                      outside JUST4GIVING.\n                    </li>\n                    <li>\n                      As a giver you can get notification in your email from the\n                      needer who interest in your item.\n                    </li>\n                    <li>\n                      As a needer you can see the email of the giver and contact\n                      them via email.\n                    </li>\n                    <li>\n                      If you put phone numbers, postal addresses into your posts\n                      on JUST4GIVING, other people will be able to see them. If\n                      you're concerned about this, don't do it!\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </Col>\n            <Col lg=\"4\">\n              <div className=\"img-container d-flex justify-content-center align-items-end\">\n                <div id=\"img-humaans-space\"></div>\n              </div>\n            </Col>\n          </Row>\n          {/* disclaimer */}\n          <Row>\n            <Col lg=\"4\"></Col>\n            <Col>\n              <div className=\"disclaimer-card p-5 m-4\" id=\"disclaimer\">\n                <h4 className=\"text-center text-white disclaimer-title\">\n                  Disclaimer\n                </h4>\n                <div className=\"disclaimer-text text-white mt-4\">\n                  <ul>\n                    <li>\n                      JUST4GIVING puts people who wants to give items in touch\n                      with people who want those items. Because of how it works,\n                      JUST4GIVING never sees or checks items and they may not be\n                      in working order. Any agreement you reach about any items\n                      will be between the person requesting items and you.\n                    </li>\n                    <li>\n                      Please use common sense when posting to JUST4GIVING or\n                      collecting an item. Example for the safety, most\n                      collections occur at home, but if you're worried about\n                      that, arrange to meet in a cafe or other public place.\n                    </li>\n                    <li>\n                      JUST4GIVING is a free stuff app, so you should never hand\n                      over money.\n                    </li>\n                    <li>\n                      If you are unlucky enough to be scammed, please report it\n                      to the Police and to us.\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </Modal.Body>\n      <Modal.Footer>\n        {/* <Button onClick={props.onHide}>Close</Button> */}\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default Disclaimer;\n","import React, { useState } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Disclaimer from \"../disclaimer/Disclaimer\";\n\nfunction Footer() {\n  //modal disclaimer\n  const [modalShow, setModalShow] = useState(false);\n  return (\n    <div className=\"main-footer\">\n      <Navbar\n        className=\"d-flex justify-content-between\"\n        sticky=\"Bottom\"\n        collapseOnSelect\n        expand=\"lg\"\n      >\n        <Nav>\n          <Nav.Item>\n            <Nav.Link className=\"footer-priv\" onClick={() => setModalShow(true)}>\n              | Privacy Policy | Disclaimer |\n            </Nav.Link>\n            <Disclaimer show={modalShow} onHide={() => setModalShow(false)} />\n          </Nav.Item>\n        </Nav>\n\n        <Nav>Copyright © 2021 Hack Your Future | All Rights Reserved |</Nav>\n\n        <Nav>\n          <Nav.Item className=\"footer-item\">\n            <i\n              className=\"fa fa-envelope-square fa-2x mail\"\n              style={{ paddingRight: \"20px\" }}\n            ></i>\n            <a href=\"https://github.com/hyf-Group2-fp/Just4Giving\">\n              <i className=\"fa fa-github fa-2x github\" aria-hidden=\"true\"></i>\n            </a>\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\nexport default Footer;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"bg\">\n      <p>About us</p>\n    </div>\n  );\n}\nexport default About;\n","\n/**\n * User Action :\n * ------------\n *\n *\n */\n\nexport const userGiver = (user) => {\n    return{\n        type:'IS_GIVER',\n        payload:user\n    }\n};\n\n\nexport const userNeeder = (user) => {\n    return{\n        type:'IS_NEEDER',\n        payload:user ,\n    }\n};\n\nexport const signedUserInfo =(user) => {\n    return{\n        type:'SIGNED_USER_INFO',\n        payload:user ,\n\n\n    }\n}\n\n\nexport const signedUserError = () => {\n    return{\n        type:'SIGNED_IN_ERROR',\n    }\n}\n\n\nexport const signedUserOut = () => {\n    return{\n        type:'SIGNED_OUT',\n    }\n}","import React, { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport  { Redirect } from 'react-router-dom'\n\n// Redux\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userNeeder} from \"../../redux/actions/userInfoAction.js\";\n\nfunction SignUpNeeder() {\n    const [validated, setValidated] = useState(false);\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [street, setStreet] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmpassword, setConfirmpassword] = useState(\"\");\n\n\n\n    const dispatch = useDispatch();\n\n    // get the needer\n    const usertype = useSelector(state => state.userInfo.is_needer);\n    const url = \"/api/needer/signup\" ;\n\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else if (password !== confirmpassword) {\n            alert(\"password and confirmpassword does not match\");\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                first_name: first_name,\n                last_name: last_name,\n                age: age,\n                phone: phone,\n                street: street,\n                description: description,\n                email: email,\n                password: password,\n                is_giver: 0,\n                is_needer: 1,\n                agreement: 1\n            };\n\n\n            try {\n                const response = await axios.post(url, userdata).then(\n                    (res) => {\n\n                        console.log(res);\n                        // dispatch action\n                        dispatch(userNeeder(userdata));\n                    }\n                )\n            } catch (error) {\n                alert('email already exist, please try login');\n                console.error(\"There was an error!\", error);\n            }\n        }\n\n        event.preventDefault();\n        setValidated(true);\n    };\n    if(usertype === 1) return (<Redirect to={{ pathname: '/profileneeder' }} />\n    );\n\n\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\"> Who are you?</h1>\n            <div className=\"container formview\">\n                <Form\n\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                >\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"first_name\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"first_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"20\"\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Atleast 3 letters\n                            </Form.Control.Feedback>{\" \"}\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"last_name\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"last_name\"\n                                type=\"text\"\n                                minLength=\"1\"\n                                maxLength=\"20\"\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>{\" \"}\n                            <Form.Control.Feedback type=\"invalid\">\n                                Atleast 1 letter\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={18}\n                                max={120}\n                                name=\"age\"\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter age between 18-120\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\" controlId=\"phone\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                placeholder=\"+32\"\n                                value={validated.phone}\n                                name=\"phone\"\n                                onChange={(e) => setPhone(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your phone number with anyone\n                                else.\n                            </Form.Text>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter phone number.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                required\n                                name=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter email address.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                required\n                                minLength=\"5\"\n                                name=\"address\"\n                                onChange={(e) => setStreet(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter your street name at least 5 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                required\n                                minLength=\"200\"\n                                rows={3}\n                                name=\"description\"\n                                onChange={(e) => setDescription(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Explain your situation in at least 200 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Password must be 8 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group\n                            as={Col}\n                            md=\"12\"\n                            controlId=\"confirmpassword\"\n                            onChange={(e) => setConfirmpassword(e.target.value)}\n                        >\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                            />{\" \"}\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                        <Form.Check\n                            required\n                            label=\"Agree to terms and conditions\"\n                            feedback=\"You must agree before submitting.\"\n                        />\n                    </Form.Group>\n                    <Button type=\"submit\" className=\"formb\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default SignUpNeeder;","import React, { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport  { Redirect } from 'react-router-dom'\n\n//Redux\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {userGiver, userNeeder} from \"../../redux/actions/userInfoAction.js\";\n\nfunction SignUpGiver(props) {\n    const url = \"/api/giver/signup\";\n    const [validated, setValidated] = useState(false);\n    const [first_name, setFirst_name] = useState(\"\");\n    const [last_name, setLast_name] = useState(\"\");\n    const [age, setAge] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [street, setStreet] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmpassword, setConfirmpassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    // get the giver\n    const usertype = useSelector(state => state.userInfo.is_giver);\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else if (password !== confirmpassword) {\n            alert(\"password and confirmpassword does not match\");\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                first_name: first_name,\n                last_name: last_name,\n                age: age,\n                phone: phone,\n                street: street,\n                description: \"no description\",\n                email: email,\n                password: password,\n                is_giver:1,\n                is_needer:0,\n                agreement:1\n            };\n\n\n            try {\n                const response = await axios.post(url, userdata).then(\n                    (res) => {\n\n                        console.log(res.data);\n\n\n                        // dispatch action\n                        dispatch(userGiver(userdata ));\n\n\n                    }\n                )\n            } catch (error) {\n                alert('email already exist, please try login');\n                console.error(\"There was an error!\", error);\n            }\n        }\n        event.preventDefault();\n        setValidated(true);\n    };\n    if(usertype === 1 ) return (<Redirect to={{ pathname: '/profilegiver' }} />\n    );\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\"> Who are you?</h1>\n            <div className=\"container formview\">\n                <Form\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                >\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"6\" controlId=\"first_name\">\n                            <Form.Label>First name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"first_name\"\n                                type=\"text\"\n                                minLength=\"3\"\n                                maxLength=\"20\"\n                                onChange={(e) => setFirst_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 3 letters\n                            </Form.Control.Feedback>{\" \"}\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"last_name\">\n                            <Form.Label>Last name</Form.Label>\n                            <Form.Control\n                                required\n                                name=\"last_name\"\n                                type=\"text\"\n                                minLength=\"1\"\n                                maxLength=\"20\"\n                                onChange={(e) => setLast_name(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>{\" \"}\n                            <Form.Control.Feedback type=\"invalid\">\n                                At least 1 letter\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"2\" controlId=\"age\">\n                            <Form.Label>Age</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                min={18}\n                                max={100}\n                                name=\"age\"\n                                onChange={(e) => setAge(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter age between 18-100\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"4\" controlId=\"phone\">\n                            <Form.Label>Phone</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"number\"\n                                placeholder=\"+32\"\n                                value={validated.phone}\n                                name=\"phone\"\n                                onChange={(e) => setPhone(e.target.value)}\n                            />\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your phone number with anyone\n                                else.\n                            </Form.Text>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter phone number.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                required\n                                name=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter email address.\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"address\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                required\n                                minLength=\"5\"\n                                name=\"address\"\n                                onChange={(e) => setStreet(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter your street name at least 5 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} md=\"12\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            />{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Password must be 8 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group\n                            as={Col}\n                            md=\"12\"\n                            controlId=\"confirmpassword\"\n                            onChange={(e) => setConfirmpassword(e.target.value)}\n                        >\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                            />{\" \"}\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                        <Form.Check\n                            required\n                            label=\"Agree to terms and conditions\"\n                            feedback=\"You must agree before submitting.\"\n                        />\n                    </Form.Group>\n                    <Button type=\"submit\" className=\"formb\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}\nexport default SignUpGiver;\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/signin.e34e01af.png\";","\nimport React, {useState} from \"react\";\nimport {Form, Button, Card} from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom';\nimport pic from '../../assets/login/signin.png';\nimport axios from \"axios\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { signedUserInfo, signedUserError} from \"../../redux/actions/userInfoAction\";\n\nfunction Login() {\n\n    const [validated,\n        setValidated] = useState(false);\n    const [email,\n        setEmail] = useState(\"\");\n    const [password,\n        setPassword] = useState(\"\");\n    const dispatch = useDispatch() ;\n\n    const handleSubmit = async(event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            const userdata = {\n                email: email,\n                password: password\n            };\n            //console.log(userdata);\n\n            try {\n                const response = await axios\n                    .post(\"/api/authenticate\", userdata)\n\n                    .then((res) => {\n\n                        // dispatch action\n                        const user = res.data.user ;\n                        dispatch(signedUserInfo(user)) ;\n                         if (res.data.user.is_giver === true) {\n                            alert('giver') ;\n                             return;\n                        } else if (res.data.user.is_needer === true) {\n                            alert('needer')\n                            return;\n                        }\n                    })\n\n            } catch (error) {\n                alert(\"please check your credentials\")\n                dispatch(signedUserError());\n                console.error('There was an error!', error);\n            }\n        }\n        event.preventDefault();\n        setValidated(true);\n    };\n    //choose what to do pass props with the data of the user\n    const isGiver = useSelector(state => state.userInfo.is_giver) ;\n    const isNeeder = useSelector(state => state.userInfo.is_needer) ;\n    if (isGiver) {\n        return (<Redirect to={{ pathname: '/profilegiver' }}\n/>)\n    } else if (isNeeder) {\n        return (<Redirect to={{ pathname: '/profileneeder'}}/>)\n    }\n\n    return (\n        <div className=\"forms\">\n            <h1 className=\"text-center formh1\">Sign-in</h1>\n            <Card className=\"signincard\">\n                <Form\n                    className=\"signin\"\n                    // method=\"post\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}>\n                    <Form.Row>\n                        <Form.Group className=\"inputs\" controlId=\"email\">\n                            <Form.Label>E-mail</Form.Label>\n                            <Form.Control required type=\"email\" onChange={(e) => setEmail(e.target.value)}/>\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Enter email\n                            </Form.Control.Feedback>{\" \"}\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group className=\"inputs\" controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                minLength=\"8\"\n                                maxLength=\"20\"\n                                required\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}/>{\" \"}\n                            <Form.Control.Feedback type=\"valid\"></Form.Control.Feedback>\n                            <Form.Control.Feedback type=\"invalid\">\n                                Password must be 8 letters\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                    </Form.Row>\n                    <Button type=\"submit\" id=\"formblogin\">\n                        Sign-in\n                    </Button>\n                </Form>\n            </Card>\n            <img className=\"bg3\" src={pic} alt=\"helping hands\"/>\n        </div>\n    );\n}\nexport default Login;\n\n","\n// Goods actions\n\n\n// create goods\n\nexport const createGoods =(goods) => {\n    return{\n        type:'CREATE_GOODS' ,\n        payload:goods\n    }\n};\n\n\n// update goods\n\nexport const updateGoods =(goods) => {\n    return{\n        type:'UPDATE_GOODS' ,\n        payload:goods\n    }\n}\n\n// delete goods\n\nexport const deleteGoods =(goods) => {\n    return{\n        type:'DELETE_GOODS' ,\n        payload:goods\n    }\n}","import axios from 'axios';\nimport { Button, Card } from 'react-bootstrap';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport team from '../../assets/landingpage/team.png';\n// component\n// import ItemView from \"./ItemView\";\n\n// Redux\nimport { createGoods } from '../../redux/actions/goodsInfoAction';\n\nexport default function Goods() {\n  const [goods, setGoods] = useState({});\n  const history = useHistory();\n\n  // dispatch an action\n  const dispatch = useDispatch();\n\n  // access the state\n  const user_id = useSelector((state) => state.userInfo.user_id);\n  // console.log(user_id);\n  const url = `/api/user/goods/${user_id}`;\n\n  // fetch goods\n  const FetchGoods = async () => {\n    const response = await axios.get(url);\n    const goods = response.data.goods;\n    // console.log(goods[0].giver_id);\n    // fire an action\n    dispatch(createGoods(goods));    \n    setGoods(goods);\n  };\n\n  useEffect(() => {\n    FetchGoods();\n  }, [user_id]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-evenly',\n      }}\n    >\n      {Object.values(goods).map((good, index) => (\n        <Card\n          className=\"itemCards\"\n          style={{ flexGrow: 1, width: '18rem' }}\n          key={good.goods_id}\n        >\n          <Card.Img src={team} alt=\"good\" style={{ width: '18rem' }} />\n          <Card.Body>\n            <Card.Text>\n              {' '}\n              {moment\n                .utc(good.createdAt)\n                .local(false)\n                .startOf('seconds')\n                .fromNow()}{' '}\n            </Card.Text>\n\n            <Card.Title>{good.item_name}</Card.Title>\n\n            <Card.Text>{good.category}</Card.Text>\n            <Button\n              size={'sm'}\n              onClick={() => history.push(`/profilegiver/item/${index}`)}\n              variant=\"primary\"\n            >\n              Details\n            </Button>\n          </Card.Body>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import {useDispatch, useSelector} from \"react-redux\";\nimport { Button , Card ,} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n// component\nimport Goods from \"./Goods\";\n\n\nfunction Giver(){\n    // dispatch an action\n    const first_name = useSelector(state => state.userInfo.first_name) ;\n\n\n\n\n    \nreturn(\n    <div className=\"banner\">\n        <div className=\"welcome\">\n            <h1> Hallo {first_name}  !</h1>\n            <p>Welcome to JUST4GIVING </p>\n            <Link to={\"/newgoods\"}><Button >I Want To Donate</Button></Link>\n        </div>\n\n\n        <div>\n            <Goods/>\n        </div>\n    </div>\n\n\n)};\n\nexport default Giver;","import React, { useState } from 'react';\nimport { Form, Col, Button, InputGroup } from 'react-bootstrap';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport Resizer from 'react-image-file-resizer';\n\nfunction NewItem() {\n  const [validated, setValidated] = useState(false);\n  const [item, setItem] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [quality, setQuality] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [image, setImage] = useState('');\n  const [form, setForm] = useState(false);\n\n  // use History\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      const newGood = {\n        item: item,\n        category: category,\n        description: description,\n        quality: quality,\n        quantity: quantity,\n        image: image,\n      };\n      console.log(newGood);\n      setForm(true);\n    }\n    event.preventDefault();\n    setValidated(true);\n\n    // redirect\n    history.push('/newgoods');\n  };\n  if (form) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/itemview',\n          state: { item, description, category, quality, quantity, image },\n        }}\n      />\n    );\n  }\n\n  // // image resize\n  //   const resizeFile = (file) =>\n  //       new Promise((resolve) => {\n  //           Resizer.imageFileResizer(\n  //               file,\n  //               300,\n  //               300,\n  //               \"PNG\",\n  //               100,\n  //               0,\n  //               (uri) => {\n  //                   resolve(uri);\n  //                   console.log(uri);\n  //               },\n  //               \"base64\"\n  //           );\n  //       });\n\n  //   const ImageResize = async (event) => {\n  //       try {\n  //           const file = event.target.files[0];\n  //           const image = await resizeFile(file);\n  //           setImage(image) ;\n  //       } catch (err) {\n  //           console.error(err);\n  //       }\n  //   };\n  //   console.log(image)\n  // image to string\n  const uploadImage = async (e) => {\n    const file = e.target.files[0];\n    const base64 = await convertBase64(file);\n    setImage(base64);\n  };\n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n  return (\n    <div className=\"forms\">\n      <h1 className=\"text-center formh1\">What do you want to give?</h1>\n      <div className=\"container formview mt\">\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <Form.Row>\n            <Form.Group>\n              <Form.File id=\"img\" onChange={uploadImage} label=\"Image\" />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label>Name</Form.Label>\n\n              {/*<InputGroup hasValidation>*/}\n              {/*<InputGroup.Prepend>*/}\n              {/*  <InputGroup.Text id=\"item\">What Is It</InputGroup.Text>*/}\n              {/*</InputGroup.Prepend>*/}\n              <Form.Control\n                type=\"text\"\n                placeholder=\" Laptop, Chair, etc...\"\n                aria-describedby=\"inputGroupPrepend\"\n                required\n                onChange={(e) => setItem(e.target.value)}\n              />\n              <Form.Control.Feedback></Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label\n                className=\"my-1 mr-2\"\n                htmlFor=\"inlineFormCustomSelectPref\"\n              >\n                Categories\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                className=\"my-1 mr-sm-2\"\n                id=\"category\"\n                custom\n                onChange={(e) => setCategory(e.target.value)}\n              >\n                <option value=\"0\">Select...</option>\n                <option value=\"Food\">Food</option>\n                <option value=\"Home & Garden\">Home & Garden</option>\n                <option value=\"Tools\">Tools</option>\n                <option value=\"Babies\">Babies</option>\n                <option value=\"Sports\">Sports</option>\n                <option value=\"Electronics\">Electronics</option>\n                <option value=\"Books\">Books</option>\n                <option value=\"Others\">Others</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label\n                className=\"my-1 mr-2\"\n                htmlFor=\"inlineFormCustomSelectPref\"\n              >\n                Quality\n              </Form.Label>\n              <Form.Control\n                as=\"select\"\n                className=\"my-1 mr-sm-2\"\n                id=\"quality\"\n                custom\n                onChange={(e) => setQuality(e.target.value)}\n              >\n                <option value=\"0\">Select...</option>\n                <option value=\"New\">New</option>\n                <option value=\"Fairly used\">Fairly used</option>\n                <option value=\"Heavily used\">Heavily used</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group as={Col} md=\"2\" controlId=\"quantity\">\n              <Form.Label>Quantity</Form.Label>\n              <Form.Control\n                required\n                type=\"number\"\n                min={0}\n                onChange={(e) => setQuantity(e.target.value)}\n              />\n              {/*<Form.Control.Feedback></Form.Control.Feedback>*/}\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} md=\"12\" controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                required\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Please describe the details of the item, e.g. colour, condition, size, etc...\"\n                onChange={(e) => setDescription(e.target.value)}\n              />\n              <Form.Control.Feedback></Form.Control.Feedback>\n            </Form.Group>\n          </Form.Row>\n          <Button type=\"submit\" className=\"formb\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\nexport default NewItem;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\nconst ItemPreview = (props) => {\n  // access the state\n  const giver_id = useSelector((state) => state.userInfo.user_id);\n  // const category_id = useSelector(state => state.goodsInfo.)\n\n  const url = `/api/goods`;\n  // props\n  const item = props.location.state.item;\n  const description = props.location.state.description;\n  const category = props.location.state.category;\n  const quality = props.location.state.quality;\n  const quantity = props.location.state.quantity;\n  const image = props.location.state.image;\n\n  // good object\n  const newItem = {\n    giver_id: giver_id,\n    item_name: item,\n    description: description,\n    image: image,\n    quality: quality,\n    quantity: quantity,\n    category: category,\n    available: 1,\n    taken: 0,\n    owner_id: giver_id,\n    category_id: 5,\n    createdAt: '2021-05-19T17:52:20.000Z',\n    updatedAt: '2021-05-19T17:52:20.000Z',\n  };\n\n  const handleNewItem = async () => {\n    try {\n      const response = await axios.post(url, newItem);\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <div>\n      <h1 className=\"text-center formh1\">Successfully JUST4GIVING it!</h1>\n      <div className=\"container itemview\">\n        <img src={image} alt=\"good\" />\n        <p>Name :{item}</p>\n        <p>Category :{category}</p>\n        <p>Quantity :{quantity}</p>\n        <p>Quality :{quality}</p>\n        <p>Item Description :{description}</p>\n        <Button onClick={handleNewItem}>Submit</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemPreview;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport cloneDeep from 'lodash/cloneDeep';\nimport axios from 'axios';\n\n// Redux\nimport { createGoods } from '../../redux/actions/goodsInfoAction';\n\nconst ItemView = () => {\n  // get the item id from the url\n  const itemIndex = useParams().id;\n  console.log(itemIndex);\n\n  // access goods\n  const goods = useSelector((state) => state.goods);\n\n  // copy goods state\n  const goods_copy = cloneDeep(goods);\n  const currentGood = goods_copy[itemIndex];\n  const currentGoodId = currentGood.goods_id;\n\n  // dispatch\n  const dispatch = useDispatch();\n\n  //edit Item\n  const editItem = () => {};\n\n  //delete item\n  const deleteItem = async () => {\n    for (const good in goods_copy) {\n      if (good === itemIndex) {\n        delete goods_copy[good];\n      }\n\n      dispatch(createGoods(goods_copy));\n      const response = axios.delete(`/api/goods/${currentGoodId}`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Successfully Just4Giving </h1>\n      <h4>Item name : {currentGood.item_name}</h4>\n      <h4>Description : {currentGood.description}</h4>\n      <h4>Category : {currentGood.category}</h4>\n      <h4>Quantity : {currentGood.quantity}</h4>\n      <h4>Quality : {currentGood.quality === 1 ? 'New' : 'Used'}</h4>\n      <Button onClick={editItem}>Edit</Button>\n      <Button onClick={deleteItem}>Delete</Button>\n    </div>\n  );\n};\n\nexport default ItemView;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// components\nimport Navigation from './components/landingpage/Navigation';\nimport Demo from './components/landingpage/Demo';\nimport Footer from './components/landingpage/Footer';\nimport About from './components/landingpage/About';\nimport SignUpNeeder from './components/register/SignUpNeeder';\nimport SignUpGiver from './components/register/signUpGiver';\nimport Login from './components/login/Login';\nimport Giver from './components/giver/Giverprofile';\nimport NewItem from './components/giver/NewItem';\nimport ItemPreview from './components/giver/ItemPreview';\nimport ItemView from './components/giver/ItemView';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route path=\"/\" exact component={Demo} />\n          <Route path=\"/aboutus\" exact component={About} />\n          {/*<Route path=\"/disclaimer\" exact component={Disclaimer} />*/}\n          <Route path=\"/signupneeder\" exact component={SignUpNeeder} />\n          <Route path=\"/signupgiver\" exact component={SignUpGiver} />\n          <Route path=\"/profilegiver\" exact component={Giver} />\n          <Route path=\"/newgoods\" exact component={NewItem} />\n          <Route component={ItemPreview} path=\"/itemview\" />          \n          <Route path=\"/login\" exact component={Login}></Route>\n          <Route\n            path=\"/profilegiver/item/:id\"\n            exact\n            component={ItemView}\n          ></Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * User reducer :\n * -----------\n*/\n\nconst initialState = {\n    first_name:'',\n    last_name:'',\n    age:0,\n    email:'',\n    street:'',\n    phone:'',\n    password:'',\n    is_giver:0,\n    is_needer:0,\n    description:'',\n    agreement:0,\n    signedIn: false,\n    signedOut:true ,\n    signedInError:false ,\n};\n\n\nexport const userInfoReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'IS_GIVER':\n            return{...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'IS_NEEDER':\n            return {...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'SIGNED_USER_INFO':\n            return {...state , ...action.payload ,signedIn: true, signedOut: false, signedInError: false};\n        case 'SIGNED_IN_ERROR':\n            return {signedIn: false, signedOut: true, signedInError: true} ;\n        case 'SIGNED_OUT':\n            return {signedIn: false, signedOut: true} ;\n        default:\n            return state ;\n\n    }\n\n}"," const initialState = {\n    goods:[] ,\n\n }\n\n\n export const goodsInfoReducer = (state = initialState , action) => {\n    switch (action.type){\n        case 'CREATE_GOODS':            \n            return Object.assign({},action.payload) ;\n\n        case 'UPDATE_GOODS':\n            return Object.assign({},action.payload);\n\n        case 'DELETE_GOODS':\n            return Object.assign({},action.payload);\n        default:\n            return  state ;\n    }\n\n }\n\n","\nimport { combineReducers } from \"redux\";\n\n// import all reducers\nimport {userInfoReducer} from './userInfoReducer' ;\nimport {goodsInfoReducer} from './goodsInfoReducer'\n\n\n\n// all reducers takes an object with each properties express one reducers\nconst allReducers = combineReducers({\n  userInfo:userInfoReducer ,\n  goods:goodsInfoReducer ,\n});\n\nexport default allReducers;\n","// store takes two parameters combined reducer and middlewares .....\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension' ;\nimport thunk from \"redux-thunk\";\nimport allReducers from \"./reducers/index\";\n\nconst composedEnhancer = composeWithDevTools(\n    applyMiddleware(thunk),\n)\n\n\nconst store = createStore(\n  allReducers,\n    composedEnhancer\n\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Redux\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}